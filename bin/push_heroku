#!/bin/bash -e
# This is a ci_helper script to set up an existing heroku account
# and push to it.
# Prerequisites: the ~/.ssh/known_hosts file should already contain
# the public keys of the heroku server.
# Environment variables:
#   HEROKU_APPNAME, HEROKU_LOGIN, HEROKU_API_KEY
HEROKU_APPNAME=${1:-HEROKU_APPNAME}
if [[ -z $HEROKU_LOGIN ]]; then
  echo "HEROKU_LOGIN required"
  exit 1
fi
if [[ -z $HEROKU_API_KEY ]]; then
  echo "HEROKU_API_KEY required"
  exit 1
fi

# Since heroku is a gem, make sure RVM is loaded.
# This loads RVM into a shell session.
# need the '|| true' because it may return a non-zero value.
if [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
  . "$HOME/.rvm/scripts/rvm" || true
fi

if ! [[ `type rvm | head -1` == "rvm is a function" ]]; then
  echo "rvm is not installed correctly."
  exit 1
fi

# Use a heroku API key instead of logging in. (more secure)
mkdir -p ~/.heroku
cat <<EOF >~/.heroku/credentials
$HEROKU_LOGIN
$HEROKU_API_KEY
EOF
chmod 600 ~/.heroku/credentials

# Add public key if necessary
heroku keys:add

# Create the app if it does not exist. Note this does not push anything.
if ! heroku create $HEROKU_APPNAME; then
  # Unconditionally remove the remote since it may have changed.
  if ( git remote|grep '^heroku$' ) then
    git remote rm heroku
  fi
  # Add the remote.
  git remote add heroku "git@heroku.com:$HEROKU_APPNAME.git"
fi

# Push the master branch to heroku.
git push heroku origin/master:master -f
# reset the database in case the schema has changed.
heroku rake db:reset
